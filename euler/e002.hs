import Data.List
import System.IO

answer = sum . (filter even) $ takeWhile (<= 4000000) fibos
            where fibos = map snd $ iterate (\(a, b) -> (b, a+b)) (1,1)
-- ans2 = sum . foldr () 0

-- 4613732

-- answer = sum $ fiboEvenUntil 10
--         where fiboEvenUntil 2 = [fibo 2]
--               fiboEvenUntil x
--                         | even x = x : fiboEvenUntil (x-1)
--                         | otherwise = fiboEvenUntil (x-1)

--          TASK             --
-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
